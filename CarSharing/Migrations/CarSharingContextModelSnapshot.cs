// <auto-generated />
using System;
using CarSharing.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarSharing.Migrations
{
    [DbContext(typeof(CarSharingContext))]
    partial class CarSharingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarSharing.Models.Car", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("additionalEquipment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("engine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarSharing.Models.Customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("adminAccount")
                        .HasColumnType("bit");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<bool>("ammountOfReservedCars")
                        .HasColumnType("bit");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("cookieId")
                        .HasColumnType("float");

                    b.Property<DateTime>("dateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("premiumStatus")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CarSharing.Models.Relation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("carId")
                        .HasColumnType("int");

                    b.Property<int>("customerId")
                        .HasColumnType("int");

                    b.Property<int>("reservationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("carId");

                    b.HasIndex("customerId");

                    b.HasIndex("reservationId")
                        .IsUnique();

                    b.ToTable("Relations");
                });

            modelBuilder.Entity("CarSharing.Models.Reservation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("rentedFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("rentedTo")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("CarSharing.Models.Relation", b =>
                {
                    b.HasOne("CarSharing.Models.Car", "car")
                        .WithMany("relations")
                        .HasForeignKey("carId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarSharing.Models.Customer", "customer")
                        .WithMany("relations")
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarSharing.Models.Reservation", "reservation")
                        .WithOne("relation")
                        .HasForeignKey("CarSharing.Models.Relation", "reservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("car");

                    b.Navigation("customer");

                    b.Navigation("reservation");
                });

            modelBuilder.Entity("CarSharing.Models.Car", b =>
                {
                    b.Navigation("relations");
                });

            modelBuilder.Entity("CarSharing.Models.Customer", b =>
                {
                    b.Navigation("relations");
                });

            modelBuilder.Entity("CarSharing.Models.Reservation", b =>
                {
                    b.Navigation("relation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
